<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wisteria.stockJobCenter.mapper.SkuStockMapper">


    <sql id="normalItems">
        si.id, si.task_time as taskTime, si.task_status as taskStatus, si.create_time as createTime
    </sql>

    <select id="loadInventoryRefreshTaskLeast" resultType="com.wisteria.stockJobCenter.entity.InventoryRefreshTask">
        SELECT
        <include refid="normalItems"/>
        FROM stock_center.inventory_refresh_task si
        order by si.id desc
        limit 1;
    </select>

    <select id="loadSkuStockFlowLeast" resultType="com.wisteria.stockCenterBase.entity.SkuStockFlow">
        SELECT sf.id, sf.`type`, sf.sku_code as skuCode, sf.quantity, sf.serial_number as serialNumber, sf.create_time
        as createTime
        FROM stock_center.sku_stock_flow sf
        order by sf.id desc
        limit 1;
    </select>

    <select id="loadSkuStockChange" resultType="com.wisteria.common.entity.product.SkuStockFlowCollect">
        SELECT sf.sku_code as skuCode ,sum(sf.quantity) as quantity ,sf.`type`
        FROM stock_center.sku_stock_flow sf
        where sf.id BETWEEN #{flowIdStart} and #{flowIdEnd}
        group by sf.`type` ,sf.sku_code ;
    </select>

    <insert id="insertInventoryRefreshTask" useGeneratedKeys="true" keyProperty="id" parameterType="com.wisteria.stockJobCenter.entity.InventoryRefreshTask">
        INSERT INTO stock_center.inventory_refresh_task
        (task_time, stock_flow_id ,task_status)
        VALUES(#{taskTime}, #{stockFlowId}, 0);
    </insert>

    <insert id="insertSkuStockTemp" parameterType="com.wisteria.common.entity.product.SkuStockFlowCollect">
        INSERT INTO stock_center.sku_stock_temp
        (sku_code, quantity)
        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.skuCode}, #{item.quantity})
        </foreach>
        ;
    </insert>

    <update id="refreshStockByStockTemp">
        UPDATE
        stock_center.sku_stock ss ,
        stock_center.sku_stock_temp sst
        set
        ss.inventory_available = ss.inventory_available + sst.quantity,
        ss.inventory_total = ss.inventory_total + sst.quantity
        where
        ss.sku_code = sst.sku_code;
    </update>

    <insert id="insertSkuStockNullable">
        INSERT
        INTO
        stock_center.sku_stock
        (inventory_available,
        inventory_total,
        sku_code)
        select
        0,
        0,
        sst.sku_code
        FROM
        stock_center.sku_stock_temp sst
        left join stock_center.sku_stock ss on
        ss.sku_code = sst.sku_code
        where
        ss.stock_id is null;
    </insert>

    <update id="updateInventoryRefreshTaskStatus" parameterType="int">
        update stock_center.inventory_refresh_task
        set task_status = 1
        where id = #{id};
    </update>

    <select id="clearSkuStockTemp">
        truncate table stock_center.sku_stock_temp;
    </select>
</mapper>